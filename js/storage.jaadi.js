// Generated by CoffeeScript 1.6.3
/*
Storage plugin for Chrome Local Storage object
*/

var ChromeLocalStoragePlugin, W3CLocalStoragePlugin, W3CSessionStoragePlugin, W3CStoragePlugin,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ChromeLocalStoragePlugin = (function(_super) {
  __extends(ChromeLocalStoragePlugin, _super);

  function ChromeLocalStoragePlugin() {
    this.storage = chrome.storage.local;
  }

  ChromeLocalStoragePlugin.prototype.get = function(key) {
    return JSON.parse(this.storage.get(key));
  };

  ChromeLocalStoragePlugin.prototype.put = function(key, value) {
    return this.storage.put(key, JSON.stringify(value));
  };

  ChromeLocalStoragePlugin.prototype.remove = function(key) {
    return this.storage.remove(key);
  };

  ChromeLocalStoragePlugin.prototype.size = function() {
    return this.storage.length;
  };

  return ChromeLocalStoragePlugin;

})(JaadiPlugin);

/*
Storage plugin for W3C DOM Local Storage object
*/


W3CStoragePlugin = (function(_super) {
  __extends(W3CStoragePlugin, _super);

  function W3CStoragePlugin(storage) {
    this.storage = storage;
  }

  W3CStoragePlugin.prototype.get = function(key) {
    return JSON.parse(this.storage.getItem(key));
  };

  W3CStoragePlugin.prototype.put = function(key, value) {
    return this.storage.setItem(key, JSON.stringify(value));
  };

  W3CStoragePlugin.prototype.remove = function(key) {
    return this.storage.removeItem(key);
  };

  W3CStoragePlugin.prototype.size = function() {
    return this.storage.length;
  };

  W3CStoragePlugin.prototype.clear = function() {
    var k, v, _ref, _results;
    _ref = this.storage;
    _results = [];
    for (k in _ref) {
      v = _ref[k];
      _results.push(this.remove(k));
    }
    return _results;
  };

  return W3CStoragePlugin;

})(JaadiPlugin);

W3CLocalStoragePlugin = (function(_super) {
  __extends(W3CLocalStoragePlugin, _super);

  function W3CLocalStoragePlugin() {
    W3CLocalStoragePlugin.__super__.constructor.call(this, window.localStorage);
  }

  return W3CLocalStoragePlugin;

})(W3CStoragePlugin);

W3CSessionStoragePlugin = (function(_super) {
  __extends(W3CSessionStoragePlugin, _super);

  function W3CSessionStoragePlugin() {
    W3CSessionStoragePlugin.__super__.constructor.call(this, window.sessionStorage);
  }

  return W3CSessionStoragePlugin;

})(W3CStoragePlugin);

Jaadi.plugins.add("localstorage", function() {
  try {
    window.localStorage;
    if (!window["locplugin"]) {
      window["locplugin"] = new W3CLocalStoragePlugin();
    }
  } catch (_error) {
    if (chrome && (chrome.storage != null)) {
      if (!window["locplugin"]) {
        window["locplugin"] = new ChromeLocalStoragePlugin();
      }
    }
  }
  return window["locplugin"];
});

Jaadi.plugins.add("session", function() {
  try {
    window.sessionStorage;
    if (!window["sessplugin"]) {
      window["sessplugin"] = new W3CSessionStoragePlugin();
    }
    return window["sessplugin"];
  } catch (_error) {
    throw "sessionStorage not supported";
  }
});
